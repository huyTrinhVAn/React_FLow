<!-- views/platformmetrics.handlebars hoặc platformmetrics2.handlebars -->

<!-- Load Bootstrap -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">

<style>
    /* CRITICAL: Protect header và title từ Bootstrap reset */
    
    /* Reset body về mặc định */
    body {
        margin: 0 !important;
        padding: 0 !important;
    }
    
    /* Protect main title/header */
    h1 {
        margin-top: 20px !important;
        margin-bottom: 20px !important;
        padding: 20px !important;
        font-size: 2em !important;
        font-weight: bold !important;
    }
    
    /* Nếu title có class cụ thể, protect nó */
    .dashboard-title,
    .main-title {
        margin: 20px 0 !important;
        padding: 20px !important;
    }
    
    /* Protect navigation */
    nav,
    .navbar,
    .navigation {
        margin: 0 !important;
        padding: 10px 20px !important;
    }
    
    /* Content area cho Platform Metrics page */
    .platform-content {
        padding: 20px;
        margin-top: 20px; /* Space giữa header và content */
    }
</style>

<!-- Content của page -->
<div class="platform-content">
    <h4 style="margin-bottom: 20px;">Platform Metrics</h4>
    
    <div id="groupedView">
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    </div>
</div>

<!-- Handlebars Template -->
<script id="table-template" type="text/x-handlebars-template">
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Platform</th>
                    <th>Sub-Category</th>
                    <th>Account</th>
                    <th>Date</th>
                    <th>Item</th>
                    <th>State</th>
                </tr>
            </thead>
            <tbody>
                \{{#each items}}
                <tr>
                    <td>\{{this.platform}}</td>
                    <td>\{{this.sub-category}}</td>
                    <td>\{{this.account}}</td>
                    <td>\{{this.date}}</td>
                    <td>\{{this.item}}</td>
                    <td>
                        <span class="badge bg-\{{getBadgeClass this.state}}">
                            \{{this.state}}
                        </span>
                    </td>
                </tr>
                \{{/each}}
            </tbody>
        </table>
    </div>
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/handlebars@4.7.8/dist/handlebars.min.js"></script>

<script>
    Handlebars.registerHelper('getBadgeClass', function(state) {
        if (!state) return 'secondary';
        return state.toLowerCase() === 'healthy' ? 'success' : 'danger';
    });

    async function fetch_data() {
        try {
            const response = await fetch('/platformmetrics');
            const data = await response.json();
            console.log("Fetched data:", data);
            if (!data.success) throw new Error(data.error || 'Failed to fetch data');
            return data;
        } catch (error) {
            console.error("Error fetching data:", error);
            throw error;
        }
    }

    async function renderView() {
        try {
            const data = await fetch_data();
            if (!data.data || data.data.length === 0) {
                document.getElementById('groupedView').innerHTML = '<div class="alert alert-info">No data available</div>';
                return;
            }
            const source = document.getElementById('table-template').innerHTML;
            const template = Handlebars.compile(source);
            const html = template({ items: data.data });
            document.getElementById('groupedView').innerHTML = html;
            console.log("Rendered successfully");
        } catch (error) {
            console.error("Error in renderView:", error);
            document.getElementById('groupedView').innerHTML = '<div class="alert alert-danger"><strong>Error:</strong> ' + error.message + '</div>';
        }
    }

    document.addEventListener('DOMContentLoaded', renderView);
</script>
