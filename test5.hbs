<!DOCTYPE html>
<html>
<head>
    <title>Platform Metrics</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container-fluid py-4">
        <h4 class="mb-4">Platform Metrics</h4>
        
        <div id="groupedView">
            <div class="text-center py-5">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Handlebars Template -->
    <script id="table-template" type="text/x-handlebars-template">
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>Platform</th>
                        <th>Sub-Category</th>
                        <th>Account</th>
                        <th>Date</th>
                        <th>Item</th>
                        <th>State</th>
                    </tr>
                </thead>
                <tbody>
                    \{{#each items}}
                    <tr>
                        <td>\{{this.platform}}</td>
                        <td>\{{this.sub-category}}</td>
                        <td>\{{this.account}}</td>
                        <td>\{{this.date}}</td>
                        <td>\{{this.item}}</td>
                        <td>
                            <span class="badge bg-\{{getBadgeClass this.state}}">
                                \{{this.state}}
                            </span>
                        </td>
                    </tr>
                    \{{/each}}
                </tbody>
            </table>
        </div>
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/handlebars@4.7.8/dist/handlebars.min.js"></script>
    
    <script>
        // Register Handlebars helper
        Handlebars.registerHelper('getBadgeClass', function(state) {
            if (!state) return 'secondary';
            return state.toLowerCase() === 'healthy' ? 'success' : 'danger';
        });

        // Fetch data from API
        async function fetch_data() {
            try {
                const response = await fetch('/platformmetrics');
                const data = await response.json();
                
                console.log("Fetched data:", data);
                
                if (!data.success) {
                    throw new Error(data.error || 'Failed to fetch data');
                }
                
                return data;
            } catch (error) {
                console.error("Error fetching data:", error);
                throw error;
            }
        }

        // Main render function
        async function renderView() {
            try {
                const data = await fetch_data();
                
                if (!data.data || data.data.length === 0) {
                    document.getElementById('groupedView').innerHTML = `
                        <div class="alert alert-info">No data available</div>
                    `;
                    return;
                }
                
                // Compile Handlebars template
                const source = document.getElementById('table-template').innerHTML;
                const template = Handlebars.compile(source);
                
                // Render
                const html = template({ items: data.data });
                document.getElementById('groupedView').innerHTML = html;
                
                console.log("Rendered successfully");
                
            } catch (error) {
                console.error("Error in renderView:", error);
                document.getElementById('groupedView').innerHTML = `
                    <div class="alert alert-danger">
                        <strong>Error:</strong> ${error.message}
                    </div>
                `;
            }
        }

        // Load on page ready
        document.addEventListener('DOMContentLoaded', renderView);
    </script>
</body>
</html>
